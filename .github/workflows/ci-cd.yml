name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      GCP_REGION: europe-west2
      FRONTEND_IMAGE: gcr.io/${{ secrets.GCP_PROJECT_ID }}/frontend:latest
      BACKEND_IMAGE: gcr.io/${{ secrets.GCP_PROJECT_ID }}/backend:latest

    steps:
    # Checkout the code
    - name: Checkout code
      uses: actions/checkout@v4

    # Authenticate with Google Cloud
    - name: Set up Google Cloud SDK
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_CREDENTIALS }}

    # Set up Google Cloud SDK
    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        # service_account_key: ${{ secrets.GCP_SA_KEY }}
        # export_default_credentials: true

    # Build the frontend Docker image
    - name: Build Frontend Docker Image
      run: |
        cd frontend
        docker build -t $FRONTEND_IMAGE .

    # Build the backend Docker image
    - name: Build Backend Docker Image
      run: |
        cd backend
        docker build -t $BACKEND_IMAGE .

    # Push the frontend Docker image to Google Container Registry
    - name: Push Frontend Docker Image to GCR
      run: |
        docker push $FRONTEND_IMAGE

    # Push the backend Docker image to Google Container Registry
    - name: Push Backend Docker Image to GCR
      run: |
        docker push $BACKEND_IMAGE

    # Terraform Init
    - name: Terraform Init
      working-directory: ./terraform
      run: terraform init

    # Terraform Apply
    - name: Terraform Apply
      working-directory: ./terraform
      run: |
        terraform apply -auto-approve \
          -var "frontend_image=$FRONTEND_IMAGE" \
          -var "backend_image=$BACKEND_IMAGE"

    # (Optional) Post-deploy verification or cleanup steps
